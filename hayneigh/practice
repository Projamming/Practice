
"Count" counts the number of letters in the two words that you would enter. If the number of letters in the first word are more than the number of letters in the second word, the output you get would be "true"
(defn longer
  "Returns true if word1 is longer than word2"
  [word1 word2]
  (> (count word1) (count word2)))

(defn first_longer
  "returns true if the nth entry of lst1 is longer than the nth entry of lst2"
  [lst1 lst2 n]
  (longer (nth lst1 n) (nth lst2 n)))

;;I thought this function was cool because it shuffled the entire word. You're able to read and understand the word if you keep the first
;;and last letter of the word. 
(defn shuffler
  "Returns a shuffled version of strg."
  [strg]
  (apply str (shuffle (seq strg))))
;;Keeps the first and last letter but shuffles the middle part of the word. "Str" strings all the letters together
(defn scrambler
  "Returns a scrambled version of strg"
  [strg]
  (str (first strg)
       (shuffler (subs strg 1 (dec (count strg))))
       (last strg)))
