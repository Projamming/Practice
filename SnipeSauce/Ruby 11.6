# Cloujure verison:
# (for [i (range 10)] (* i 2)) 

# Ruby verion:
# for i in (0...10) #  "..." doesn't include the last number, while ".." does
#   puts i * 2
# end

# Clojure version:
# (def daves_list '("a" "b" "c" "d" "e" "f" "g"))
# (for [k '(1 3 5)] (nth daves_list k))

# Ruby verion:
# daves_list = ["a", "b", "c", "d", "e", "f", "g"]
# for k in [1, 3, 5]
#   puts daves_list[k]
# end

# Clojure verion:
# (defn longer_list
#   "Reported true if lst1 has more entries than lst2."
#   [lst1 lst2]
#   (if (> (count lst1)(count lst2))
#     "List 1 is longer
#     "List 1 is not longer"
#   )
# )

# Ruby version (called a 'method'):
def longer_list(lst1, lst2)
  if lst1.count > lst2.count
    puts "List 1 is longer."
  else
    puts "List 1 is not longer."
  end
end
