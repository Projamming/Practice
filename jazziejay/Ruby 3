# (for [i (range 10)] (* i 2))
# Ruby version:
for i in (0...9)
# the "..." means that the last number of the
# list is included. ".." would NOT include the
# last number.
  i * 2
end

# (def daves_list '("a" "b" "c" "d" "e" "f" "g"))
# (for [k '(1 3 5)] (nth daves_list k))
# Ruby version:
daves_list = ["a", "b", "c", "d", "e", "f", "g"]
for k in [1, 3, 5]
  puts daves_list[k]
end

# (defn longer_list
#   "Return true if lst1 has more entries than lst2."
#   [lst1 lst2]
#   (if (> (count lst1) (count lst2))
#     "List 1 is longer!"
#     "List 1 is not longer."
#   )
# )
# Ruby version (called a "method", while it is
# called a "function" in Clojure:
def longer_list(lst1, lst2)
  if lst1.count > lst2.count
    puts "List 1 is longer than List 2!"
  else
    puts "List 1 is NOT longer than list 2."
  end
end

# Lists in Ruby are in brackets.
